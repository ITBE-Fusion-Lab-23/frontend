import React, { FC } from "react";
export interface LikeButtonTemplateComponentProps {
    isLoading: boolean;
    userLiked: boolean | undefined;
    totalLikes: number | undefined;
    handlePress: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;
    isCounterVisible: boolean;
}
declare type CallbackProps = Components.Schemas.LikeButton["data"];
export interface LikeButtonProps {
    id: string;
    namespace?: string;
    hideCounterIfLessThan?: number;
    onLoad?: (props: CallbackProps) => void;
    onPress?: (props: CallbackProps) => void;
    children?: (props: LikeButtonTemplateComponentProps) => React.ReactElement<any, any> | null;
    component?: React.FC<LikeButtonTemplateComponentProps>;
}
declare type FCWithTemplates<Props> = FC<Props> & {
    templates: {
        Simple: React.FC<LikeButtonTemplateComponentProps>;
        Twitter: React.FC<LikeButtonTemplateComponentProps>;
        Chevron: React.FC<LikeButtonTemplateComponentProps>;
        Heart: React.FC<LikeButtonTemplateComponentProps>;
    };
};
declare const LikeButton: FCWithTemplates<LikeButtonProps>;
export { LikeButton };
