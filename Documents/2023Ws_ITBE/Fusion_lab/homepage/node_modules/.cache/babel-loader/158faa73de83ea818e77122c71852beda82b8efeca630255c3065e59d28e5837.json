{"ast":null,"code":"var _jsxFileName = \"/Users/luying/Documents/2023Ws_ITBE/Fusion_lab/homepage/src/components/Comment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './comment.css';\nimport Box from '@mui/material/Box';\nimport Rating from '@mui/material/Rating';\nimport StarIcon from '@mui/icons-material/Star';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst labels = {\n  1: 'Bad',\n  2: 'Poor',\n  3: 'Ok',\n  4: 'Good',\n  5: 'Excellent'\n};\nfunction getLabelText(value) {\n  return `${value} Star${value !== 1 ? 's' : ''}, ${labels[value]}`;\n}\nconst CommentModal = ({\n  selectedComponent,\n  closeModal\n}) => {\n  _s();\n  const [hover, setHover] = useState(-1);\n  const [comment, setComment] = useState('');\n  const [stakeholder, setStakeholder] = useState('');\n  const [rating, setRating] = useState(0);\n  const [liked, setLiked] = useState(false);\n  const [count, setCount] = useState(0);\n  const [showRatingError, setShowRatingError] = useState(false); // New state for error message visibility\n\n  const handleCancel = () => {\n    // Logic for submitting the comment\n    closeModal(); // Close the modal after submitting\n  };\n  const handleInputChange = event => {\n    setComment(event.target.value);\n  };\n  const handleStakeholderChange = option => {\n    setStakeholder(option);\n  };\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    if (rating === 0) {\n      setShowRatingError(true); // Show error message if no rating is selected\n      return; // Prevent further execution\n    }\n    console.log(\"Form submitted\");\n    submitComment();\n  };\n  useEffect(() => {\n    if (rating !== 0) {\n      setShowRatingError(false);\n    }\n  }, [rating]);\n  const stakeholderOptions = [\"Government and Planning Authorities\", \"Local Residents\", \"Transportation Departments\", \"Construction and Engineering Firms\", \"Environmental Groups\", \"Financial and Investment Parties\", \"Public Safety and Health Departments\", \"Commuter\", \"Other\"];\n  const submitComment = async () => {\n    const commentData = {\n      component: selectedComponent,\n      text: comment,\n      rating,\n      liked,\n      count,\n      stakeholder\n    };\n    try {\n      // Replace with your actual API call, for example:\n      // await axios.post('your-api-endpoint/comments', commentData);\n      console.log('Submitting comment:', commentData);\n      closeModal();\n    } catch (error) {\n      console.error('Error submitting comment:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Comment on \", selectedComponent]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            width: '100%',\n            marginTop: '50px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Rating, {\n            name: \"hover-feedback\",\n            value: rating,\n            precision: 1,\n            size: \"large\",\n            getLabelText: getLabelText,\n            onChange: (event, newValue) => {\n              setRating(newValue);\n            },\n            onChangeActive: (event, newHover) => {\n              setHover(newHover);\n            },\n            emptyIcon: /*#__PURE__*/_jsxDEV(StarIcon, {\n              style: {\n                opacity: 0.55\n              },\n              fontSize: \"inherit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), rating !== null && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              ml: 2\n            },\n            children: labels[hover !== -1 ? hover : rating]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: comment,\n          onChange: handleInputChange,\n          placeholder: \"Please leave your comments\",\n          className: \"comment-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stakeholder-label\",\n            children: \"What\\u2019s your type of stakeholders?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stakeholder-buttons\",\n            children: stakeholderOptions.map((option, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: `stakeholder-button ${stakeholder === option ? \"active\" : \"\"}`,\n                onClick: () => handleStakeholderChange(option),\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), (index + 1) % 4 === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row-divider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 47\n              }, this)]\n            }, option, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"cancel-button\",\n            onClick: handleCancel,\n            children: \"CANCEL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-comment\",\n            onClick: submitComment,\n            disabled: rating === 0,\n            children: \"CONFIRM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentModal, \"VJ7RaAXdNtcpcjAJxNoqYQaUyIQ=\");\n_c = CommentModal;\nexport default CommentModal;\nvar _c;\n$RefreshReg$(_c, \"CommentModal\");","map":{"version":3,"names":["React","useState","Box","Rating","StarIcon","jsxDEV","_jsxDEV","labels","getLabelText","value","CommentModal","selectedComponent","closeModal","_s","hover","setHover","comment","setComment","stakeholder","setStakeholder","rating","setRating","liked","setLiked","count","setCount","showRatingError","setShowRatingError","handleCancel","handleInputChange","event","target","handleStakeholderChange","option","handleFormSubmit","preventDefault","console","log","submitComment","useEffect","stakeholderOptions","commentData","component","text","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","sx","display","flexDirection","alignItems","justifyContent","width","marginTop","name","precision","size","onChange","newValue","onChangeActive","newHover","emptyIcon","style","opacity","fontSize","ml","placeholder","map","index","Fragment","type","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/luying/Documents/2023Ws_ITBE/Fusion_lab/homepage/src/components/Comment.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './comment.css';\nimport Box from '@mui/material/Box';\nimport Rating from '@mui/material/Rating';\nimport StarIcon from '@mui/icons-material/Star';\n\n\nconst labels = {\n\n  1: 'Bad',\n\n  2: 'Poor',\n\n  3: 'Ok',\n\n  4: 'Good',\n\n  5: 'Excellent',\n};\nfunction getLabelText(value) {\n  return `${value} Star${value !== 1 ? 's' : ''}, ${labels[value]}`;\n}\n\n\n\nconst CommentModal = ({ selectedComponent,closeModal  }) => {\n\n\n  const [hover, setHover] = useState(-1);\n  const [comment, setComment] = useState('');\n  const [stakeholder, setStakeholder] = useState('');\n  const [rating, setRating] = useState(0);\n  const [liked, setLiked] = useState(false);\n  const [count, setCount] = useState(0);\n  const [showRatingError, setShowRatingError] = useState(false); // New state for error message visibility\n\n\n\n\n\n\n \n\n  const handleCancel = () => {\n    // Logic for submitting the comment\n    closeModal(); // Close the modal after submitting\n  };\n\n\n \n\n\n  const handleInputChange = (event) => {\n\n    setComment(event.target.value);\n  };\n\n  const handleStakeholderChange = (option) => {\n    setStakeholder(option);\n  };\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n\n   \n    if (rating === 0) {\n      setShowRatingError(true); // Show error message if no rating is selected\n      return; // Prevent further execution\n    }\n    console.log(\"Form submitted\");\n    submitComment();\n  };\n\n  useEffect(() => {\n    if (rating !== 0) {\n      setShowRatingError(false);\n    }\n  }, [rating]);\n\n\n  const stakeholderOptions = [\n    \"Government and Planning Authorities\",\n    \"Local Residents\",\n    \"Transportation Departments\",\n    \"Construction and Engineering Firms\",\n    \"Environmental Groups\",\n    \"Financial and Investment Parties\",\n    \"Public Safety and Health Departments\",\n    \"Commuter\",\n    \"Other\",\n  ];\n\n  const submitComment = async (\n    \n  ) => {\n    const commentData = {\n      component: selectedComponent,\n      text: comment,\n      rating,\n      liked,\n      count,\n      stakeholder\n    };\n    \n\n    try {\n      // Replace with your actual API call, for example:\n      // await axios.post('your-api-endpoint/comments', commentData);\n      console.log('Submitting comment:', commentData);\n      closeModal();\n    } catch (error) {\n      console.error('Error submitting comment:', error);\n    }\n  };\n\n\n\n  \n\n\n\n  return (\n    <div className=\"comment-modal\">\n    <div className=\"modal-content\">\n      <h2>Comment on {selectedComponent}</h2> \n      <form onSubmit={handleFormSubmit}>\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center', \n              justifyContent: 'center', \n              width: '100%', \n              marginTop: '50px',\n            }}\n          >\n            <Rating\n              name=\"hover-feedback\"\n              value={rating}\n              precision={1}\n              size=\"large\"\n              getLabelText={getLabelText}\n              onChange={(event, newValue) => {\n                setRating(newValue);\n              }}\n              onChangeActive={(event, newHover) => {\n                setHover(newHover);\n              }}\n              emptyIcon={<StarIcon style={{ opacity: 0.55 }} fontSize=\"inherit\" />}\n            />\n            \n            {rating !== null && (\n              <Box sx={{ ml: 2 }}>{labels[hover !== -1 ? hover : rating]}</Box>\n            )}\n\n          </Box>\n\n\n\n          <textarea\n            value={comment}\n            onChange={handleInputChange}\n            placeholder=\"Please leave your comments\"\n            className=\"comment-input\"\n          />\n\n\n          <div >\n            <p className='stakeholder-label'>What’s your type of stakeholders?</p>\n            <div className='stakeholder-buttons'>\n              {stakeholderOptions.map((option, index) => (\n                <React.Fragment key={option}>\n                  <button\n                    type=\"button\"\n                    className={`stakeholder-button ${stakeholder === option ? \"active\" : \"\"}`}\n                    onClick={() => handleStakeholderChange(option)}\n                  >\n                    {option}\n                  </button>\n                  {/* Assuming you know how many buttons per row, add a divider */}\n                  {((index + 1) % 4 === 0) && <div className=\"row-divider\"></div>}\n                </React.Fragment>\n              ))}\n            </div>\n\n          </div>\n\n\n          <div className=\"form-actions\">\n            <button type=\"button\" className=\"cancel-button\" onClick={handleCancel}>CANCEL</button>\n            <button type=\"submit\" className=\"submit-comment\" onClick={submitComment} disabled={rating === 0} >CONFIRM</button>\n           \n\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default CommentModal;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}