{"ast":null,"code":"var _jsxFileName = \"/Users/luying/Documents/2023Ws_ITBE/Fusion_lab/homepage/src/components/model_viewer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CommentModal from './Comment';\nimport CommentList from './CommentList'; // Adjust the import path as needed\nimport Overview from './Overview'; // Adjust the import path as needed\n\nimport './model_viewer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModelViewer() {\n  _s();\n  const [selectedComponent, setSelectedComponent] = useState('Overrall'); // Set to 'Overrall' as the default\n  const [comments, setComments] = useState([]); // Initialize comments as an array\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const componentsList = ['Overrall', 'Pedestrian Space', 'Road', 'Access to public transport', 'Structure'];\n  const [groupedComments] = useState({\n    \"Road\": [{\n      component: \"Road\",\n      text: 'Good job!',\n      rating: 5,\n      liked: false,\n      count: 7,\n      stakeholder: 'Commuter'\n    }, {\n      component: \"Road\",\n      text: 'I like the design.',\n      rating: 4,\n      liked: false,\n      count: 7,\n      stakeholder: 'Local Residents'\n    }, {\n      component: \"Road\",\n      text: 'I like the design.',\n      rating: 4,\n      liked: false,\n      count: 7,\n      stakeholder: 'Local Residents'\n    }, {\n      component: \"Road\",\n      text: 'I like the design.',\n      rating: 4,\n      liked: false,\n      count: 7,\n      stakeholder: 'Local Residents'\n    }, {\n      component: \"Road\",\n      text: 'I like the design.',\n      rating: 4,\n      liked: false,\n      count: 7,\n      stakeholder: 'Local Residents'\n    }, {\n      component: \"Road\",\n      text: 'I like the design.',\n      rating: 4,\n      liked: false,\n      count: 7,\n      stakeholder: 'Local Residents'\n    }, {\n      component: \"Road\",\n      text: 'I like the design.',\n      rating: 4,\n      liked: false,\n      count: 7,\n      stakeholder: 'Local Residents'\n    }, {\n      component: \"Road\",\n      text: 'I like the design.',\n      rating: 4,\n      liked: false,\n      count: 7,\n      stakeholder: 'Local Residents'\n    }],\n    \"Structure\": [{\n      component: \"Structure\",\n      text: 'Too short.',\n      rating: 3,\n      liked: false,\n      count: 7,\n      stakeholder: 'Commuter'\n    }, {\n      component: \"Structure\",\n      text: 'I like the design.',\n      rating: 5,\n      liked: false,\n      count: 7,\n      stakeholder: 'Local Residents'\n    }, {\n      component: \"Structure\",\n      text: 'I like the design.',\n      rating: 5,\n      liked: false,\n      count: 7,\n      stakeholder: 'Local Residents'\n    }, {\n      component: \"Structure\",\n      text: 'I like the design.',\n      rating: 5,\n      liked: false,\n      count: 7,\n      stakeholder: 'Local Residents'\n    }, {\n      component: \"Structure\",\n      text: 'I like the design.',\n      rating: 5,\n      liked: false,\n      count: 7,\n      stakeholder: 'Local Residents'\n    }, {\n      component: \"Structure\",\n      text: 'I like the design.',\n      rating: 5,\n      liked: false,\n      count: 7,\n      stakeholder: 'Local Residents'\n    }, {\n      component: \"Structure\",\n      text: 'I like the design.',\n      rating: 5,\n      liked: false,\n      count: 7,\n      stakeholder: 'Local Residents'\n    }]\n    // Add more components and comments as needed\n  });\n  useEffect(() => {\n    // Update comments based on the selected component\n    setComments(groupedComments[selectedComponent] || []);\n  }, [selectedComponent, groupedComments]);\n\n  /*useEffect(() => {\n     const fetchComments = async () => {\n       try {\n         const response = await fetch('your-api-endpoint/comments');\n         const data = await response.json();\n         setComments(data);\n       } catch (error) {\n         console.error('Error fetching comments:', error);\n       }\n     };\n      fetchComments();\n   }, []);*/\n\n  const handleDropdownChange = event => {\n    setSelectedComponent(event.target.value);\n  };\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"model-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"model-viewer-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Model Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"model-display\",\n      children: selectedComponent ? selectedComponent : 'New IFC Modeling'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"components-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"components-label\",\n        children: \"Components\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedComponent,\n        onChange: handleDropdownChange,\n        className: \"component-dropdown\",\n        children: componentsList.map(component => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: component,\n          children: component\n        }, component, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"comment-button\",\n        onClick: openModal,\n        children: \"COMMENT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(CommentModal, {\n      selectedComponent: selectedComponent,\n      closeModal: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Overview, {\n      comments: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n      selectedComponent: selectedComponent,\n      comments: comments,\n      setComments: setComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n_s(ModelViewer, \"HqpyWl/61w8yy7tV0TAlgPOjX2I=\");\n_c = ModelViewer;\nexport default ModelViewer;\nvar _c;\n$RefreshReg$(_c, \"ModelViewer\");","map":{"version":3,"names":["React","useState","useEffect","CommentModal","CommentList","Overview","jsxDEV","_jsxDEV","ModelViewer","_s","selectedComponent","setSelectedComponent","comments","setComments","isModalOpen","setIsModalOpen","componentsList","groupedComments","component","text","rating","liked","count","stakeholder","handleDropdownChange","event","target","value","openModal","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","onClick","_c","$RefreshReg$"],"sources":["/Users/luying/Documents/2023Ws_ITBE/Fusion_lab/homepage/src/components/model_viewer.js"],"sourcesContent":["import React, { useState ,useEffect} from 'react';\nimport CommentModal from './Comment';\nimport CommentList from './CommentList'; // Adjust the import path as needed\nimport Overview from './Overview'; // Adjust the import path as needed\n\nimport './model_viewer.css';\n\nfunction ModelViewer() {\n  const [selectedComponent, setSelectedComponent] = useState('Overrall'); // Set to 'Overrall' as the default\n  const [comments, setComments] = useState([]); // Initialize comments as an array\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const componentsList = ['Overrall', 'Pedestrian Space', 'Road', 'Access to public transport', 'Structure'];\n\n  const [groupedComments] = useState({\n    \"Road\": [\n      {\n        component: \"Road\",\n        text: 'Good job!',\n        rating: 5,\n        liked:false,\n        count:7,\n        stakeholder: 'Commuter'\n      },\n      {\n        component: \"Road\",\n        text: 'I like the design.',\n        rating: 4,\n        liked:false,\n        count:7,\n        stakeholder: 'Local Residents'\n      },\n      {\n        component: \"Road\",\n        text: 'I like the design.',\n        rating: 4,\n        liked:false,\n        count:7,\n        stakeholder: 'Local Residents'\n      },{\n        component: \"Road\",\n        text: 'I like the design.',\n        rating: 4,\n        liked:false,\n        count:7,\n        stakeholder: 'Local Residents'\n      },{\n        component: \"Road\",\n        text: 'I like the design.',\n        rating: 4,\n        liked:false,\n        count:7,\n        stakeholder: 'Local Residents'\n      },{\n        component: \"Road\",\n        text: 'I like the design.',\n        rating: 4,\n        liked:false,\n        count:7,\n        stakeholder: 'Local Residents'\n      },{\n        component: \"Road\",\n        text: 'I like the design.',\n        rating: 4,\n        liked:false,\n        count:7,\n        stakeholder: 'Local Residents'\n      },{\n        component: \"Road\",\n        text: 'I like the design.',\n        rating: 4,\n        liked:false,\n        count:7,\n        stakeholder: 'Local Residents'\n      },\n    ],\n    \"Structure\": [\n      {\n        component: \"Structure\",\n        text: 'Too short.',\n        rating: 3,\n        liked:false,\n        count:7,\n        stakeholder: 'Commuter'\n      },\n      {\n        component: \"Structure\",\n        text: 'I like the design.',\n        rating: 5,\n        liked:false,\n        count:7,\n        stakeholder: 'Local Residents'\n      },\n      {\n        component: \"Structure\",\n        text: 'I like the design.',\n        rating: 5,\n        liked:false,\n        count:7,\n        stakeholder: 'Local Residents'\n      },{\n        component: \"Structure\",\n        text: 'I like the design.',\n        rating: 5,\n        liked:false,\n        count:7,\n        stakeholder: 'Local Residents'\n      },{\n        component: \"Structure\",\n        text: 'I like the design.',\n        rating: 5,\n        liked:false,\n        count:7,\n        stakeholder: 'Local Residents'\n      },{\n        component: \"Structure\",\n        text: 'I like the design.',\n        rating: 5,\n        liked:false,\n        count:7,\n        stakeholder: 'Local Residents'\n      },{\n        component: \"Structure\",\n        text: 'I like the design.',\n        rating: 5,\n        liked:false,\n        count:7,\n        stakeholder: 'Local Residents'\n      }\n    ],\n    // Add more components and comments as needed\n  });\n\n  useEffect(() => {\n    // Update comments based on the selected component\n    setComments(groupedComments[selectedComponent] || []);\n  }, [selectedComponent, groupedComments]);\n\n\n /*useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await fetch('your-api-endpoint/comments');\n        const data = await response.json();\n        setComments(data);\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n\n    fetchComments();\n  }, []);*/\n\n\n\n\n  const handleDropdownChange = (event) => {\n    setSelectedComponent(event.target.value);\n  };\n\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n\n\n\n  return (\n    <div className=\"model-viewer\">\n      <div className=\"model-viewer-header\">\n        <h1>Model Viewer</h1>\n      </div>\n\n      <div className=\"model-display\">\n        {selectedComponent ? selectedComponent : 'New IFC Modeling'}\n      </div>\n\n      <div className=\"components-section\">\n        <p className=\"components-label\">Components</p>\n        <select \n          value={selectedComponent} \n          onChange={handleDropdownChange}\n          className=\"component-dropdown\"\n        >\n          {componentsList.map((component) => (\n            <option key={component} value={component}>{component}</option>\n          ))}\n        </select>\n        <button className=\"comment-button\" onClick={openModal}>COMMENT</button>\n      </div>\n\n      {isModalOpen &&( <CommentModal selectedComponent={selectedComponent} closeModal={closeModal} />)}   \n\n\n<Overview comments={comments}/>\n      {/* Render the CommentsList component with the selected component and comments */}\n      <CommentList selectedComponent={selectedComponent} comments={comments}  setComments={setComments}/>\n    </div>\n  );\n}\n\nexport default ModelViewer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}