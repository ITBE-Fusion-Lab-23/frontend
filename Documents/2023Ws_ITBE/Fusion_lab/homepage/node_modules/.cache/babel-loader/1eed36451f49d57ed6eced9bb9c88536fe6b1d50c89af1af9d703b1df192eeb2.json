{"ast":null,"code":"export const getExtremumX = params => {\n  var _axis$data, _axis$data2;\n  const {\n    axis\n  } = params;\n  const minX = Math.min(...((_axis$data = axis.data) != null ? _axis$data : []));\n  const maxX = Math.max(...((_axis$data2 = axis.data) != null ? _axis$data2 : []));\n  return [minX, maxX];\n};\nfunction getSeriesExtremums(getValues, stackedData) {\n  if (stackedData.length === 0) {\n    return [null, null];\n  }\n  return stackedData.reduce((seriesAcc, stackedValue) => {\n    const [base, value] = getValues(stackedValue);\n    if (seriesAcc[0] === null) {\n      return [Math.min(base, value), Math.max(base, value)];\n    }\n    return [Math.min(base, value, seriesAcc[0]), Math.max(base, value, seriesAcc[1])];\n  }, getValues(stackedData[0]));\n}\nexport const getExtremumY = params => {\n  const {\n    series,\n    axis,\n    isDefaultAxis\n  } = params;\n  return Object.keys(series).filter(seriesId => series[seriesId].yAxisKey === axis.id || isDefaultAxis && series[seriesId].yAxisKey === undefined).reduce((acc, seriesId) => {\n    const {\n      area,\n      stackedData\n    } = series[seriesId];\n    const isArea = area !== undefined;\n    const getValues = isArea ? d => d : d => [d[1], d[1]]; // Since this series is not used to display an area, we do not consider the base (the d[0]).\n\n    const seriesExtremums = getSeriesExtremums(getValues, stackedData);\n    if (acc[0] === null) {\n      return seriesExtremums;\n    }\n    if (seriesExtremums[0] === null) {\n      return acc;\n    }\n    const [seriesMin, seriesMax] = seriesExtremums;\n    return [Math.min(seriesMin, acc[0]), Math.max(seriesMax, acc[1])];\n  }, [null, null]);\n};","map":{"version":3,"names":["getExtremumX","params","_axis$data","_axis$data2","axis","minX","Math","min","data","maxX","max","getSeriesExtremums","getValues","stackedData","length","reduce","seriesAcc","stackedValue","base","value","getExtremumY","series","isDefaultAxis","Object","keys","filter","seriesId","yAxisKey","id","undefined","acc","area","isArea","d","seriesExtremums","seriesMin","seriesMax"],"sources":["/Users/luying/Documents/2023Ws_ITBE/Fusion_lab/homepage/node_modules/@mui/x-charts/esm/LineChart/extremums.js"],"sourcesContent":["export const getExtremumX = params => {\n  var _axis$data, _axis$data2;\n  const {\n    axis\n  } = params;\n  const minX = Math.min(...((_axis$data = axis.data) != null ? _axis$data : []));\n  const maxX = Math.max(...((_axis$data2 = axis.data) != null ? _axis$data2 : []));\n  return [minX, maxX];\n};\nfunction getSeriesExtremums(getValues, stackedData) {\n  if (stackedData.length === 0) {\n    return [null, null];\n  }\n  return stackedData.reduce((seriesAcc, stackedValue) => {\n    const [base, value] = getValues(stackedValue);\n    if (seriesAcc[0] === null) {\n      return [Math.min(base, value), Math.max(base, value)];\n    }\n    return [Math.min(base, value, seriesAcc[0]), Math.max(base, value, seriesAcc[1])];\n  }, getValues(stackedData[0]));\n}\nexport const getExtremumY = params => {\n  const {\n    series,\n    axis,\n    isDefaultAxis\n  } = params;\n  return Object.keys(series).filter(seriesId => series[seriesId].yAxisKey === axis.id || isDefaultAxis && series[seriesId].yAxisKey === undefined).reduce((acc, seriesId) => {\n    const {\n      area,\n      stackedData\n    } = series[seriesId];\n    const isArea = area !== undefined;\n    const getValues = isArea ? d => d : d => [d[1], d[1]]; // Since this series is not used to display an area, we do not consider the base (the d[0]).\n\n    const seriesExtremums = getSeriesExtremums(getValues, stackedData);\n    if (acc[0] === null) {\n      return seriesExtremums;\n    }\n    if (seriesExtremums[0] === null) {\n      return acc;\n    }\n    const [seriesMin, seriesMax] = seriesExtremums;\n    return [Math.min(seriesMin, acc[0]), Math.max(seriesMax, acc[1])];\n  }, [null, null]);\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}