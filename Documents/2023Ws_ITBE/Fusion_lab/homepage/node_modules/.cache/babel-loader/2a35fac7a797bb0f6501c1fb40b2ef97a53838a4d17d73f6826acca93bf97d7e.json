{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar PropTypes = require('prop-types');\nvar _require = require('focus-trap'),\n  createFocusTrap = _require.createFocusTrap;\nvar _require2 = require('tabbable'),\n  isFocusable = _require2.isFocusable; // TODO: These issues are related to older React features which we'll likely need\n//  to fix in order to move the code forward to the next major version of React.\n//  @see https://github.com/davidtheclark/focus-trap-react/issues/77\n\n/* eslint-disable react/no-find-dom-node */\n\nvar FocusTrap = /*#__PURE__*/function (_React$Component) {\n  _inherits(FocusTrap, _React$Component);\n  var _super = _createSuper(FocusTrap);\n  function FocusTrap(props) {\n    var _this;\n    _classCallCheck(this, FocusTrap);\n    _this = _super.call(this, props);\n    _defineProperty(_assertThisInitialized(_this), \"getNodeForOption\", function (optionName) {\n      var _this$internalOptions;\n\n      // use internal options first, falling back to original options\n      var optionValue = (_this$internalOptions = this.internalOptions[optionName]) !== null && _this$internalOptions !== void 0 ? _this$internalOptions : this.originalOptions[optionName];\n      if (typeof optionValue === 'function') {\n        for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          params[_key - 1] = arguments[_key];\n        }\n        optionValue = optionValue.apply(void 0, params);\n      }\n      if (optionValue === true) {\n        optionValue = undefined; // use default value\n      }\n      if (!optionValue) {\n        if (optionValue === undefined || optionValue === false) {\n          return optionValue;\n        } // else, empty string (invalid), null (invalid), 0 (invalid)\n\n        throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n      }\n      var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n      if (typeof optionValue === 'string') {\n        var _this$getDocument;\n        node = (_this$getDocument = this.getDocument()) === null || _this$getDocument === void 0 ? void 0 : _this$getDocument.querySelector(optionValue); // resolve to node, or null if fails\n\n        if (!node) {\n          throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n        }\n      }\n      return node;\n    });\n    _this.handleDeactivate = _this.handleDeactivate.bind(_assertThisInitialized(_this));\n    _this.handlePostDeactivate = _this.handlePostDeactivate.bind(_assertThisInitialized(_this));\n    _this.handleClickOutsideDeactivates = _this.handleClickOutsideDeactivates.bind(_assertThisInitialized(_this)); // focus-trap options used internally when creating the trap\n\n    _this.internalOptions = {\n      // We need to hijack the returnFocusOnDeactivate option,\n      // because React can move focus into the element before we arrived at\n      // this lifecycle hook (e.g. with autoFocus inputs). So the component\n      // captures the previouslyFocusedElement in componentWillMount,\n      // then (optionally) returns focus to it in componentWillUnmount.\n      returnFocusOnDeactivate: false,\n      // the rest of these are also related to deactivation of the trap, and we\n      //  need to use them and control them as well\n      checkCanReturnFocus: null,\n      onDeactivate: _this.handleDeactivate,\n      onPostDeactivate: _this.handlePostDeactivate,\n      // we need to special-case this setting as well so that we can know if we should\n      //  NOT return focus if the trap gets auto-deactivated as the result of an\n      //  outside click (otherwise, we'll always think we should return focus because\n      //  of how we manage that flag internally here)\n      clickOutsideDeactivates: _this.handleClickOutsideDeactivates\n    }; // original options provided by the consumer\n\n    _this.originalOptions = {\n      // because of the above `internalOptions`, we maintain our own flag for\n      //  this option, and default it to `true` because that's focus-trap's default\n      returnFocusOnDeactivate: true,\n      // because of the above `internalOptions`, we keep these separate since\n      //  they're part of the deactivation process which we configure (internally) to\n      //  be shared between focus-trap and focus-trap-react\n      onDeactivate: null,\n      onPostDeactivate: null,\n      checkCanReturnFocus: null,\n      // the user's setting, defaulted to false since focus-trap defaults this to false\n      clickOutsideDeactivates: false\n    };\n    var focusTrapOptions = props.focusTrapOptions;\n    for (var optionName in focusTrapOptions) {\n      if (!Object.prototype.hasOwnProperty.call(focusTrapOptions, optionName)) {\n        continue;\n      }\n      if (optionName === 'returnFocusOnDeactivate' || optionName === 'onDeactivate' || optionName === 'onPostDeactivate' || optionName === 'checkCanReturnFocus' || optionName === 'clickOutsideDeactivates') {\n        _this.originalOptions[optionName] = focusTrapOptions[optionName];\n        continue; // exclude from internalOptions\n      }\n      _this.internalOptions[optionName] = focusTrapOptions[optionName];\n    } // if set, `{ target: Node, allowDeactivation: boolean }` where `target` is the outside\n    //  node that was clicked, and `allowDeactivation` is the result of the consumer's\n    //  option (stored in `this.originalOptions.clickOutsideDeactivates`, which may be a\n    //  function) whether to allow or deny auto-deactivation on click on this outside node\n\n    _this.outsideClick = null; // elements from which to create the focus trap on mount; if a child is used\n    //  instead of the `containerElements` prop, we'll get the child's related\n    //  element when the trap renders and then is declared 'mounted'\n\n    _this.focusTrapElements = props.containerElements || []; // now we remember what the currently focused element is, not relying on focus-trap\n\n    _this.updatePreviousElement();\n    return _this;\n  }\n  /**\n   * Gets the configured document.\n   * @returns {Document|undefined} Configured document, falling back to the main\n   *  document, if it exists. During SSR, `undefined` is returned since the\n   *  document doesn't exist.\n   */\n\n  _createClass(FocusTrap, [{\n    key: \"getDocument\",\n    value: function getDocument() {\n      // SSR: careful to check if `document` exists before accessing it as a variable\n      return this.props.focusTrapOptions.document || (typeof document !== 'undefined' ? document : undefined);\n    }\n    /**\n     * Gets the node for the given option, which is expected to be an option that\n     *  can be either a DOM node, a string that is a selector to get a node, `false`\n     *  (if a node is explicitly NOT given), or a function that returns any of these\n     *  values.\n     * @param {string} optionName\n     * @returns {undefined | false | HTMLElement | SVGElement} Returns\n     *  `undefined` if the option is not specified; `false` if the option\n     *  resolved to `false` (node explicitly not given); otherwise, the resolved\n     *  DOM node.\n     * @throws {Error} If the option is set, not `false`, and is not, or does not\n     *  resolve to a node.\n     */\n  }, {\n    key: \"getReturnFocusNode\",\n    value: function getReturnFocusNode() {\n      var node = this.getNodeForOption('setReturnFocus', this.previouslyFocusedElement);\n      return node ? node : node === false ? false : this.previouslyFocusedElement;\n    }\n    /** Update the previously focused element with the currently focused element. */\n  }, {\n    key: \"updatePreviousElement\",\n    value: function updatePreviousElement() {\n      var currentDocument = this.getDocument();\n      if (currentDocument) {\n        this.previouslyFocusedElement = currentDocument.activeElement;\n      }\n    }\n  }, {\n    key: \"deactivateTrap\",\n    value: function deactivateTrap() {\n      // NOTE: it's possible the focus trap has already been deactivated without our knowing it,\n      //  especially if the user set the `clickOutsideDeactivates: true` option on the trap,\n      //  and the mouse was clicked on some element outside the trap; at that point, focus-trap\n      //  will initiate its auto-deactivation process, which will call our own\n      //  handleDeactivate(), which will call into this method\n      if (!this.focusTrap || !this.focusTrap.active) {\n        return;\n      }\n      this.focusTrap.deactivate({\n        // NOTE: we never let the trap return the focus since we do that ourselves\n        returnFocus: false,\n        // we'll call this in our own post deactivate handler so make sure the trap doesn't\n        //  do it prematurely\n        checkCanReturnFocus: null,\n        // let it call the user's original deactivate handler, if any, instead of\n        //  our own which calls back into this function\n        onDeactivate: this.originalOptions.onDeactivate // NOTE: for post deactivate, don't specify anything so that it calls the\n        //  onPostDeactivate handler specified on `this.internalOptions`\n        //  which will always be our own `handlePostDeactivate()` handler, which\n        //  will finish things off by calling the user's provided onPostDeactivate\n        //  handler, if any, at the right time\n        // onPostDeactivate: NOTHING\n      });\n    }\n  }, {\n    key: \"handleClickOutsideDeactivates\",\n    value: function handleClickOutsideDeactivates(event) {\n      // use consumer's option (or call their handler) as the permission or denial\n      var allowDeactivation = typeof this.originalOptions.clickOutsideDeactivates === 'function' ? this.originalOptions.clickOutsideDeactivates.call(null, event) // call out of context\n      : this.originalOptions.clickOutsideDeactivates; // boolean\n\n      if (allowDeactivation) {\n        // capture the outside target that was clicked so we can use it in the deactivation\n        //  process since the consumer allowed it to cause auto-deactivation\n        this.outsideClick = {\n          target: event.target,\n          allowDeactivation: allowDeactivation\n        };\n      }\n      return allowDeactivation;\n    }\n  }, {\n    key: \"handleDeactivate\",\n    value: function handleDeactivate() {\n      if (this.originalOptions.onDeactivate) {\n        this.originalOptions.onDeactivate.call(null); // call user's handler out of context\n      }\n      this.deactivateTrap();\n    }\n  }, {\n    key: \"handlePostDeactivate\",\n    value: function handlePostDeactivate() {\n      var _this2 = this;\n      var finishDeactivation = function finishDeactivation() {\n        var returnFocusNode = _this2.getReturnFocusNode();\n        var canReturnFocus = !!(\n        // did the consumer allow it?\n        _this2.originalOptions.returnFocusOnDeactivate &&\n        // can we actually focus the node?\n        returnFocusNode !== null && returnFocusNode !== void 0 && returnFocusNode.focus && (\n        // was there an outside click that allowed deactivation?\n        !_this2.outsideClick ||\n        // did the consumer allow deactivation when the outside node was clicked?\n        _this2.outsideClick.allowDeactivation &&\n        // is the outside node NOT focusable (implying that it did NOT receive focus\n        //  as a result of the click-through) -- in which case do NOT restore focus\n        //  to `returnFocusNode` because focus should remain on the outside node\n        !isFocusable(_this2.outsideClick.target, _this2.internalOptions.tabbableOptions)) // if no, the restore focus to `returnFocusNode` at this point\n        );\n        var _this2$internalOption = _this2.internalOptions.preventScroll,\n          preventScroll = _this2$internalOption === void 0 ? false : _this2$internalOption;\n        if (canReturnFocus) {\n          // return focus to the element that had focus when the trap was activated\n          returnFocusNode.focus({\n            preventScroll: preventScroll\n          });\n        }\n        if (_this2.originalOptions.onPostDeactivate) {\n          _this2.originalOptions.onPostDeactivate.call(null); // don't call it in context of \"this\"\n        }\n        _this2.outsideClick = null; // reset: no longer needed\n      };\n      if (this.originalOptions.checkCanReturnFocus) {\n        this.originalOptions.checkCanReturnFocus.call(null, this.getReturnFocusNode()) // call out of context\n        .then(finishDeactivation, finishDeactivation);\n      } else {\n        finishDeactivation();\n      }\n    }\n  }, {\n    key: \"setupFocusTrap\",\n    value: function setupFocusTrap() {\n      if (!this.focusTrap) {\n        var focusTrapElementDOMNodes = this.focusTrapElements.map(\n        // NOTE: `findDOMNode()` does not support CSS selectors; it'll just return\n        //  a new text node with the text wrapped in it instead of treating the\n        //  string as a selector and resolving it to a node in the DOM\n        ReactDOM.findDOMNode);\n        var nodesExist = focusTrapElementDOMNodes.some(Boolean);\n        if (nodesExist) {\n          // eslint-disable-next-line react/prop-types -- _createFocusTrap is an internal prop\n          this.focusTrap = this.props._createFocusTrap(focusTrapElementDOMNodes, this.internalOptions);\n          if (this.props.active) {\n            this.focusTrap.activate();\n          }\n          if (this.props.paused) {\n            this.focusTrap.pause();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.active) {\n        this.setupFocusTrap();\n      } // else, wait for later activation in case the `focusTrapOptions` will be updated\n      //  again before the trap is activated (e.g. if waiting to know what the document\n      //  object will be, so the Trap must be rendered, but the consumer is waiting to\n      //  activate until they have obtained the document from a ref)\n      //  @see https://github.com/focus-trap/focus-trap-react/issues/539\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.focusTrap) {\n        if (prevProps.containerElements !== this.props.containerElements) {\n          this.focusTrap.updateContainerElements(this.props.containerElements);\n        }\n        var hasActivated = !prevProps.active && this.props.active;\n        var hasDeactivated = prevProps.active && !this.props.active;\n        var hasPaused = !prevProps.paused && this.props.paused;\n        var hasUnpaused = prevProps.paused && !this.props.paused;\n        if (hasActivated) {\n          this.updatePreviousElement();\n          this.focusTrap.activate();\n        }\n        if (hasDeactivated) {\n          this.deactivateTrap();\n          return; // un/pause does nothing on an inactive trap\n        }\n        if (hasPaused) {\n          this.focusTrap.pause();\n        }\n        if (hasUnpaused) {\n          this.focusTrap.unpause();\n        }\n      } else {\n        // NOTE: if we're in `componentDidUpdate` and we don't have a trap yet,\n        //  it either means it shouldn't be active, or it should be but none of\n        //  of given `containerElements` were present in the DOM the last time\n        //  we tried to create the trap\n        if (prevProps.containerElements !== this.props.containerElements) {\n          this.focusTrapElements = this.props.containerElements;\n        } // don't create the trap unless it should be active in case the consumer\n        //  is still updating `focusTrapOptions`\n        //  @see https://github.com/focus-trap/focus-trap-react/issues/539\n\n        if (this.props.active) {\n          this.updatePreviousElement();\n          this.setupFocusTrap();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.deactivateTrap();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var child = this.props.children ? React.Children.only(this.props.children) : undefined;\n      if (child) {\n        if (child.type && child.type === React.Fragment) {\n          throw new Error('A focus-trap cannot use a Fragment as its child container. Try replacing it with a <div> element.');\n        }\n        var composedRefCallback = function composedRefCallback(element) {\n          var containerElements = _this3.props.containerElements;\n          if (child) {\n            if (typeof child.ref === 'function') {\n              child.ref(element);\n            } else if (child.ref) {\n              child.ref.current = element;\n            }\n          }\n          _this3.focusTrapElements = containerElements ? containerElements : [element];\n        };\n        var childWithRef = React.cloneElement(child, {\n          ref: composedRefCallback\n        });\n        return childWithRef;\n      }\n      return null;\n    }\n  }]);\n  return FocusTrap;\n}(React.Component); // support server-side rendering where `Element` will not be defined\n\nvar ElementType = typeof Element === 'undefined' ? Function : Element;\nFocusTrap.propTypes = {\n  active: PropTypes.bool,\n  paused: PropTypes.bool,\n  focusTrapOptions: PropTypes.shape({\n    document: PropTypes.object,\n    onActivate: PropTypes.func,\n    onPostActivate: PropTypes.func,\n    checkCanFocusTrap: PropTypes.func,\n    onDeactivate: PropTypes.func,\n    onPostDeactivate: PropTypes.func,\n    checkCanReturnFocus: PropTypes.func,\n    initialFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string, PropTypes.bool, PropTypes.func]),\n    fallbackFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string,\n    // NOTE: does not support `false` as value (or return value from function)\n    PropTypes.func]),\n    escapeDeactivates: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    clickOutsideDeactivates: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    returnFocusOnDeactivate: PropTypes.bool,\n    setReturnFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string, PropTypes.bool, PropTypes.func]),\n    allowOutsideClick: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    preventScroll: PropTypes.bool,\n    tabbableOptions: PropTypes.shape({\n      displayCheck: PropTypes.oneOf(['full', 'non-zero-area', 'none']),\n      getShadowRoot: PropTypes.oneOfType([PropTypes.bool, PropTypes.func])\n    })\n  }),\n  containerElements: PropTypes.arrayOf(PropTypes.instanceOf(ElementType)),\n  children: PropTypes.oneOfType([PropTypes.element,\n  // React element\n  PropTypes.instanceOf(ElementType) // DOM element\n  ]) // NOTE: _createFocusTrap is internal, for testing purposes only, so we don't\n  //  specify it here. It's expected to be set to the function returned from\n  //  require('focus-trap'), or one with a compatible interface.\n};\nFocusTrap.defaultProps = {\n  active: true,\n  paused: false,\n  focusTrapOptions: {},\n  _createFocusTrap: createFocusTrap\n};\nmodule.exports = FocusTrap;","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","value","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_defineProperty","React","require","ReactDOM","PropTypes","_require","createFocusTrap","_require2","isFocusable","FocusTrap","_React$Component","_super","_this","optionName","_this$internalOptions","optionValue","internalOptions","originalOptions","_len","params","Array","_key","undefined","Error","concat","node","_this$getDocument","getDocument","querySelector","handleDeactivate","handlePostDeactivate","handleClickOutsideDeactivates","returnFocusOnDeactivate","checkCanReturnFocus","onDeactivate","onPostDeactivate","clickOutsideDeactivates","focusTrapOptions","hasOwnProperty","outsideClick","focusTrapElements","containerElements","updatePreviousElement","document","getReturnFocusNode","getNodeForOption","previouslyFocusedElement","currentDocument","activeElement","deactivateTrap","focusTrap","active","deactivate","returnFocus","event","allowDeactivation","_this2","finishDeactivation","returnFocusNode","canReturnFocus","focus","tabbableOptions","_this2$internalOption","preventScroll","then","setupFocusTrap","focusTrapElementDOMNodes","map","findDOMNode","nodesExist","some","_createFocusTrap","activate","paused","pause","componentDidMount","componentDidUpdate","prevProps","updateContainerElements","hasActivated","hasDeactivated","hasPaused","hasUnpaused","unpause","componentWillUnmount","render","_this3","child","children","Children","only","type","Fragment","composedRefCallback","element","ref","current","childWithRef","cloneElement","Component","ElementType","Element","Function","propTypes","bool","shape","object","onActivate","func","onPostActivate","checkCanFocusTrap","initialFocus","oneOfType","instanceOf","string","fallbackFocus","escapeDeactivates","setReturnFocus","allowOutsideClick","displayCheck","oneOf","getShadowRoot","arrayOf","defaultProps","module","exports"],"sources":["/Users/luying/Documents/2023Ws_ITBE/Fusion_lab/homepage/node_modules/focus-trap-react/dist/focus-trap-react.js"],"sourcesContent":["\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar React = require('react');\n\nvar ReactDOM = require('react-dom');\n\nvar PropTypes = require('prop-types');\n\nvar _require = require('focus-trap'),\n    createFocusTrap = _require.createFocusTrap;\n\nvar _require2 = require('tabbable'),\n    isFocusable = _require2.isFocusable; // TODO: These issues are related to older React features which we'll likely need\n//  to fix in order to move the code forward to the next major version of React.\n//  @see https://github.com/davidtheclark/focus-trap-react/issues/77\n\n/* eslint-disable react/no-find-dom-node */\n\n\nvar FocusTrap = /*#__PURE__*/function (_React$Component) {\n  _inherits(FocusTrap, _React$Component);\n\n  var _super = _createSuper(FocusTrap);\n\n  function FocusTrap(props) {\n    var _this;\n\n    _classCallCheck(this, FocusTrap);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getNodeForOption\", function (optionName) {\n      var _this$internalOptions;\n\n      // use internal options first, falling back to original options\n      var optionValue = (_this$internalOptions = this.internalOptions[optionName]) !== null && _this$internalOptions !== void 0 ? _this$internalOptions : this.originalOptions[optionName];\n\n      if (typeof optionValue === 'function') {\n        for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          params[_key - 1] = arguments[_key];\n        }\n\n        optionValue = optionValue.apply(void 0, params);\n      }\n\n      if (optionValue === true) {\n        optionValue = undefined; // use default value\n      }\n\n      if (!optionValue) {\n        if (optionValue === undefined || optionValue === false) {\n          return optionValue;\n        } // else, empty string (invalid), null (invalid), 0 (invalid)\n\n\n        throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n      }\n\n      var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n      if (typeof optionValue === 'string') {\n        var _this$getDocument;\n\n        node = (_this$getDocument = this.getDocument()) === null || _this$getDocument === void 0 ? void 0 : _this$getDocument.querySelector(optionValue); // resolve to node, or null if fails\n\n        if (!node) {\n          throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n        }\n      }\n\n      return node;\n    });\n\n    _this.handleDeactivate = _this.handleDeactivate.bind(_assertThisInitialized(_this));\n    _this.handlePostDeactivate = _this.handlePostDeactivate.bind(_assertThisInitialized(_this));\n    _this.handleClickOutsideDeactivates = _this.handleClickOutsideDeactivates.bind(_assertThisInitialized(_this)); // focus-trap options used internally when creating the trap\n\n    _this.internalOptions = {\n      // We need to hijack the returnFocusOnDeactivate option,\n      // because React can move focus into the element before we arrived at\n      // this lifecycle hook (e.g. with autoFocus inputs). So the component\n      // captures the previouslyFocusedElement in componentWillMount,\n      // then (optionally) returns focus to it in componentWillUnmount.\n      returnFocusOnDeactivate: false,\n      // the rest of these are also related to deactivation of the trap, and we\n      //  need to use them and control them as well\n      checkCanReturnFocus: null,\n      onDeactivate: _this.handleDeactivate,\n      onPostDeactivate: _this.handlePostDeactivate,\n      // we need to special-case this setting as well so that we can know if we should\n      //  NOT return focus if the trap gets auto-deactivated as the result of an\n      //  outside click (otherwise, we'll always think we should return focus because\n      //  of how we manage that flag internally here)\n      clickOutsideDeactivates: _this.handleClickOutsideDeactivates\n    }; // original options provided by the consumer\n\n    _this.originalOptions = {\n      // because of the above `internalOptions`, we maintain our own flag for\n      //  this option, and default it to `true` because that's focus-trap's default\n      returnFocusOnDeactivate: true,\n      // because of the above `internalOptions`, we keep these separate since\n      //  they're part of the deactivation process which we configure (internally) to\n      //  be shared between focus-trap and focus-trap-react\n      onDeactivate: null,\n      onPostDeactivate: null,\n      checkCanReturnFocus: null,\n      // the user's setting, defaulted to false since focus-trap defaults this to false\n      clickOutsideDeactivates: false\n    };\n    var focusTrapOptions = props.focusTrapOptions;\n\n    for (var optionName in focusTrapOptions) {\n      if (!Object.prototype.hasOwnProperty.call(focusTrapOptions, optionName)) {\n        continue;\n      }\n\n      if (optionName === 'returnFocusOnDeactivate' || optionName === 'onDeactivate' || optionName === 'onPostDeactivate' || optionName === 'checkCanReturnFocus' || optionName === 'clickOutsideDeactivates') {\n        _this.originalOptions[optionName] = focusTrapOptions[optionName];\n        continue; // exclude from internalOptions\n      }\n\n      _this.internalOptions[optionName] = focusTrapOptions[optionName];\n    } // if set, `{ target: Node, allowDeactivation: boolean }` where `target` is the outside\n    //  node that was clicked, and `allowDeactivation` is the result of the consumer's\n    //  option (stored in `this.originalOptions.clickOutsideDeactivates`, which may be a\n    //  function) whether to allow or deny auto-deactivation on click on this outside node\n\n\n    _this.outsideClick = null; // elements from which to create the focus trap on mount; if a child is used\n    //  instead of the `containerElements` prop, we'll get the child's related\n    //  element when the trap renders and then is declared 'mounted'\n\n    _this.focusTrapElements = props.containerElements || []; // now we remember what the currently focused element is, not relying on focus-trap\n\n    _this.updatePreviousElement();\n\n    return _this;\n  }\n  /**\n   * Gets the configured document.\n   * @returns {Document|undefined} Configured document, falling back to the main\n   *  document, if it exists. During SSR, `undefined` is returned since the\n   *  document doesn't exist.\n   */\n\n\n  _createClass(FocusTrap, [{\n    key: \"getDocument\",\n    value: function getDocument() {\n      // SSR: careful to check if `document` exists before accessing it as a variable\n      return this.props.focusTrapOptions.document || (typeof document !== 'undefined' ? document : undefined);\n    }\n    /**\n     * Gets the node for the given option, which is expected to be an option that\n     *  can be either a DOM node, a string that is a selector to get a node, `false`\n     *  (if a node is explicitly NOT given), or a function that returns any of these\n     *  values.\n     * @param {string} optionName\n     * @returns {undefined | false | HTMLElement | SVGElement} Returns\n     *  `undefined` if the option is not specified; `false` if the option\n     *  resolved to `false` (node explicitly not given); otherwise, the resolved\n     *  DOM node.\n     * @throws {Error} If the option is set, not `false`, and is not, or does not\n     *  resolve to a node.\n     */\n\n  }, {\n    key: \"getReturnFocusNode\",\n    value: function getReturnFocusNode() {\n      var node = this.getNodeForOption('setReturnFocus', this.previouslyFocusedElement);\n      return node ? node : node === false ? false : this.previouslyFocusedElement;\n    }\n    /** Update the previously focused element with the currently focused element. */\n\n  }, {\n    key: \"updatePreviousElement\",\n    value: function updatePreviousElement() {\n      var currentDocument = this.getDocument();\n\n      if (currentDocument) {\n        this.previouslyFocusedElement = currentDocument.activeElement;\n      }\n    }\n  }, {\n    key: \"deactivateTrap\",\n    value: function deactivateTrap() {\n      // NOTE: it's possible the focus trap has already been deactivated without our knowing it,\n      //  especially if the user set the `clickOutsideDeactivates: true` option on the trap,\n      //  and the mouse was clicked on some element outside the trap; at that point, focus-trap\n      //  will initiate its auto-deactivation process, which will call our own\n      //  handleDeactivate(), which will call into this method\n      if (!this.focusTrap || !this.focusTrap.active) {\n        return;\n      }\n\n      this.focusTrap.deactivate({\n        // NOTE: we never let the trap return the focus since we do that ourselves\n        returnFocus: false,\n        // we'll call this in our own post deactivate handler so make sure the trap doesn't\n        //  do it prematurely\n        checkCanReturnFocus: null,\n        // let it call the user's original deactivate handler, if any, instead of\n        //  our own which calls back into this function\n        onDeactivate: this.originalOptions.onDeactivate // NOTE: for post deactivate, don't specify anything so that it calls the\n        //  onPostDeactivate handler specified on `this.internalOptions`\n        //  which will always be our own `handlePostDeactivate()` handler, which\n        //  will finish things off by calling the user's provided onPostDeactivate\n        //  handler, if any, at the right time\n        // onPostDeactivate: NOTHING\n\n      });\n    }\n  }, {\n    key: \"handleClickOutsideDeactivates\",\n    value: function handleClickOutsideDeactivates(event) {\n      // use consumer's option (or call their handler) as the permission or denial\n      var allowDeactivation = typeof this.originalOptions.clickOutsideDeactivates === 'function' ? this.originalOptions.clickOutsideDeactivates.call(null, event) // call out of context\n      : this.originalOptions.clickOutsideDeactivates; // boolean\n\n      if (allowDeactivation) {\n        // capture the outside target that was clicked so we can use it in the deactivation\n        //  process since the consumer allowed it to cause auto-deactivation\n        this.outsideClick = {\n          target: event.target,\n          allowDeactivation: allowDeactivation\n        };\n      }\n\n      return allowDeactivation;\n    }\n  }, {\n    key: \"handleDeactivate\",\n    value: function handleDeactivate() {\n      if (this.originalOptions.onDeactivate) {\n        this.originalOptions.onDeactivate.call(null); // call user's handler out of context\n      }\n\n      this.deactivateTrap();\n    }\n  }, {\n    key: \"handlePostDeactivate\",\n    value: function handlePostDeactivate() {\n      var _this2 = this;\n\n      var finishDeactivation = function finishDeactivation() {\n        var returnFocusNode = _this2.getReturnFocusNode();\n\n        var canReturnFocus = !!( // did the consumer allow it?\n        _this2.originalOptions.returnFocusOnDeactivate && // can we actually focus the node?\n        returnFocusNode !== null && returnFocusNode !== void 0 && returnFocusNode.focus && ( // was there an outside click that allowed deactivation?\n        !_this2.outsideClick || // did the consumer allow deactivation when the outside node was clicked?\n        _this2.outsideClick.allowDeactivation && // is the outside node NOT focusable (implying that it did NOT receive focus\n        //  as a result of the click-through) -- in which case do NOT restore focus\n        //  to `returnFocusNode` because focus should remain on the outside node\n        !isFocusable(_this2.outsideClick.target, _this2.internalOptions.tabbableOptions)) // if no, the restore focus to `returnFocusNode` at this point\n        );\n        var _this2$internalOption = _this2.internalOptions.preventScroll,\n            preventScroll = _this2$internalOption === void 0 ? false : _this2$internalOption;\n\n        if (canReturnFocus) {\n          // return focus to the element that had focus when the trap was activated\n          returnFocusNode.focus({\n            preventScroll: preventScroll\n          });\n        }\n\n        if (_this2.originalOptions.onPostDeactivate) {\n          _this2.originalOptions.onPostDeactivate.call(null); // don't call it in context of \"this\"\n\n        }\n\n        _this2.outsideClick = null; // reset: no longer needed\n      };\n\n      if (this.originalOptions.checkCanReturnFocus) {\n        this.originalOptions.checkCanReturnFocus.call(null, this.getReturnFocusNode()) // call out of context\n        .then(finishDeactivation, finishDeactivation);\n      } else {\n        finishDeactivation();\n      }\n    }\n  }, {\n    key: \"setupFocusTrap\",\n    value: function setupFocusTrap() {\n      if (!this.focusTrap) {\n        var focusTrapElementDOMNodes = this.focusTrapElements.map( // NOTE: `findDOMNode()` does not support CSS selectors; it'll just return\n        //  a new text node with the text wrapped in it instead of treating the\n        //  string as a selector and resolving it to a node in the DOM\n        ReactDOM.findDOMNode);\n        var nodesExist = focusTrapElementDOMNodes.some(Boolean);\n\n        if (nodesExist) {\n          // eslint-disable-next-line react/prop-types -- _createFocusTrap is an internal prop\n          this.focusTrap = this.props._createFocusTrap(focusTrapElementDOMNodes, this.internalOptions);\n\n          if (this.props.active) {\n            this.focusTrap.activate();\n          }\n\n          if (this.props.paused) {\n            this.focusTrap.pause();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.active) {\n        this.setupFocusTrap();\n      } // else, wait for later activation in case the `focusTrapOptions` will be updated\n      //  again before the trap is activated (e.g. if waiting to know what the document\n      //  object will be, so the Trap must be rendered, but the consumer is waiting to\n      //  activate until they have obtained the document from a ref)\n      //  @see https://github.com/focus-trap/focus-trap-react/issues/539\n\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.focusTrap) {\n        if (prevProps.containerElements !== this.props.containerElements) {\n          this.focusTrap.updateContainerElements(this.props.containerElements);\n        }\n\n        var hasActivated = !prevProps.active && this.props.active;\n        var hasDeactivated = prevProps.active && !this.props.active;\n        var hasPaused = !prevProps.paused && this.props.paused;\n        var hasUnpaused = prevProps.paused && !this.props.paused;\n\n        if (hasActivated) {\n          this.updatePreviousElement();\n          this.focusTrap.activate();\n        }\n\n        if (hasDeactivated) {\n          this.deactivateTrap();\n          return; // un/pause does nothing on an inactive trap\n        }\n\n        if (hasPaused) {\n          this.focusTrap.pause();\n        }\n\n        if (hasUnpaused) {\n          this.focusTrap.unpause();\n        }\n      } else {\n        // NOTE: if we're in `componentDidUpdate` and we don't have a trap yet,\n        //  it either means it shouldn't be active, or it should be but none of\n        //  of given `containerElements` were present in the DOM the last time\n        //  we tried to create the trap\n        if (prevProps.containerElements !== this.props.containerElements) {\n          this.focusTrapElements = this.props.containerElements;\n        } // don't create the trap unless it should be active in case the consumer\n        //  is still updating `focusTrapOptions`\n        //  @see https://github.com/focus-trap/focus-trap-react/issues/539\n\n\n        if (this.props.active) {\n          this.updatePreviousElement();\n          this.setupFocusTrap();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.deactivateTrap();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var child = this.props.children ? React.Children.only(this.props.children) : undefined;\n\n      if (child) {\n        if (child.type && child.type === React.Fragment) {\n          throw new Error('A focus-trap cannot use a Fragment as its child container. Try replacing it with a <div> element.');\n        }\n\n        var composedRefCallback = function composedRefCallback(element) {\n          var containerElements = _this3.props.containerElements;\n\n          if (child) {\n            if (typeof child.ref === 'function') {\n              child.ref(element);\n            } else if (child.ref) {\n              child.ref.current = element;\n            }\n          }\n\n          _this3.focusTrapElements = containerElements ? containerElements : [element];\n        };\n\n        var childWithRef = React.cloneElement(child, {\n          ref: composedRefCallback\n        });\n        return childWithRef;\n      }\n\n      return null;\n    }\n  }]);\n\n  return FocusTrap;\n}(React.Component); // support server-side rendering where `Element` will not be defined\n\n\nvar ElementType = typeof Element === 'undefined' ? Function : Element;\nFocusTrap.propTypes = {\n  active: PropTypes.bool,\n  paused: PropTypes.bool,\n  focusTrapOptions: PropTypes.shape({\n    document: PropTypes.object,\n    onActivate: PropTypes.func,\n    onPostActivate: PropTypes.func,\n    checkCanFocusTrap: PropTypes.func,\n    onDeactivate: PropTypes.func,\n    onPostDeactivate: PropTypes.func,\n    checkCanReturnFocus: PropTypes.func,\n    initialFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string, PropTypes.bool, PropTypes.func]),\n    fallbackFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string, // NOTE: does not support `false` as value (or return value from function)\n    PropTypes.func]),\n    escapeDeactivates: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    clickOutsideDeactivates: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    returnFocusOnDeactivate: PropTypes.bool,\n    setReturnFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string, PropTypes.bool, PropTypes.func]),\n    allowOutsideClick: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    preventScroll: PropTypes.bool,\n    tabbableOptions: PropTypes.shape({\n      displayCheck: PropTypes.oneOf(['full', 'non-zero-area', 'none']),\n      getShadowRoot: PropTypes.oneOfType([PropTypes.bool, PropTypes.func])\n    })\n  }),\n  containerElements: PropTypes.arrayOf(PropTypes.instanceOf(ElementType)),\n  children: PropTypes.oneOfType([PropTypes.element, // React element\n  PropTypes.instanceOf(ElementType) // DOM element\n  ]) // NOTE: _createFocusTrap is internal, for testing purposes only, so we don't\n  //  specify it here. It's expected to be set to the function returned from\n  //  require('focus-trap'), or one with a compatible interface.\n\n};\nFocusTrap.defaultProps = {\n  active: true,\n  paused: false,\n  focusTrapOptions: {},\n  _createFocusTrap: createFocusTrap\n};\nmodule.exports = FocusTrap;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}